/*
 * The MIT License
 *
 * Copyright 2018 mohamed.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package machine;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static machine.GUIGeldAutomat.Wallet_CLA;
import static machine.GUIGeldAutomat.counter;

/**
 *
 * @author mohamed
 */
public class JavaCardTest extends javax.swing.JFrame {
 private JavaCardHostApp host;
  private JFrame frame;
  static byte counter;
     final static byte PIN_TRY_LIMIT = (byte) 0x03;
    final static byte Applet_CLA = (byte) 0xB0;
     final static byte VERIFY = (byte) 0x20;
 final static byte Get_static_data = (byte) 0x30;
   final static byte Get_frequent_data = (byte) 0x40;
    final static byte Get_less_frequent_data = (byte) 0x80;
      final static byte GET_BALANCE = (byte) 0x50;
      final static byte Set_static_data = (byte) 0x31;
   final static byte Set_frequent_data = (byte) 0x41;
    final static byte Set_less_frequent_data = (byte) 0x51;
    
    final static byte UNBLOCK = (byte) 0x60;

  
    /**
     * Creates new form JavaCardTest
     */
    public JavaCardTest() {
        initComponents();
            host = new JavaCardHostApp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnConnect = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTFPin = new javax.swing.JTextField();
        jBtnPin = new javax.swing.JButton();
        JTFoutput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTFPuk = new javax.swing.JTextField();
        jBtnPuk = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTAdata = new javax.swing.JTextArea();
        jBtnStore = new javax.swing.JButton();
        jBtnGet = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jBtnDisconnect = new javax.swing.JButton();
        jTFdataType = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jBtnSign = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jBtnConnect.setText("connect");
        jBtnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnConnectActionPerformed(evt);
            }
        });

        jBtnPin.setText("Enter PIN");
        jBtnPin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPinActionPerformed(evt);
            }
        });

        jLabel1.setText("OutPut");

        jLabel2.setText("Data");

        jBtnPuk.setText("Enter PUK");
        jBtnPuk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPukActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(JTFoutput, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jBtnPin)
                                .addGap(53, 53, 53)
                                .addComponent(jTFPin, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jBtnPuk)
                                .addGap(53, 53, 53)
                                .addComponent(jTFPuk, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFPuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPuk))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JTFoutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTAdata.setColumns(20);
        jTAdata.setRows(5);
        jScrollPane1.setViewportView(jTAdata);

        jBtnStore.setText("store");
        jBtnStore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStoreActionPerformed(evt);
            }
        });

        jBtnGet.setText("get");
        jBtnGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGetActionPerformed(evt);
            }
        });

        jLabel3.setText("FMS JavaCard test");

        jBtnDisconnect.setText("disconnect");
        jBtnDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDisconnectActionPerformed(evt);
            }
        });

        jTFdataType.setText("1");

        jLabel4.setText("dataType :");

        jBtnSign.setText("sign");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBtnStore)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtnGet))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(244, 244, 244)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTFdataType, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(jLabel3)))
                        .addGap(0, 2, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBtnConnect)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jBtnDisconnect)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnSign, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnConnect)
                    .addComponent(jBtnDisconnect)
                    .addComponent(jBtnSign))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFdataType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnStore)
                    .addComponent(jBtnGet))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnConnectActionPerformed
        // TODO add your handling code here:
        
             byte lengthDataField = 6;
        byte maxDataBytesExpected = 6;
        byte instParamtr1 = 0x04;
        byte instParamtr2 = 0;  
        counter = 3;
        
        host.establishConnectionToSimulator();
        host.pwrUp();
         //select
        byte[] cmnds = {(byte)0x00, (byte)0xA4, instParamtr1, instParamtr2};       
        host.setTheAPDUCommands(cmnds);
        host.setTheDataLength(lengthDataField);

        byte[] data = { (byte)0x19, (byte)0xd2, (byte)0x02, (byte)0x6c, (byte)0x20,(byte)0x0e};
      //  byte[] data = { (byte)0x19, (byte)0xd2, (byte)0x02, (byte)0x6c, (byte)0x20,(byte)0xc9,(byte)0xdc};
        host.setTheDataIn(data);
        host.setExpctdByteLength(maxDataBytesExpected);
        setTheCommandAPDUOnGUI(cmnds, data,lengthDataField, maxDataBytesExpected);
        host.exchangeTheAPDUWithSimulator();
        host.decodeStatus();
        setTheResponseAPDUOnGUI(maxDataBytesExpected);
        
     
    }//GEN-LAST:event_jBtnConnectActionPerformed

    private void jBtnDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDisconnectActionPerformed
        // TODO add your handling code here:
             host.pwrDown();
        host.closeConnection();
        JTFoutput.setText("Done");
  
    }//GEN-LAST:event_jBtnDisconnectActionPerformed

    private void jBtnStoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnStoreActionPerformed
        // TODO add your handling code here:
        
          byte lengthDataField = 6;
        byte maxDataBytesExpected = 0;
        byte instParamtr1 = 0;
        byte instParamtr2 = 0;
        byte[] data_c = jTAdata.getText().getBytes();
        byte INS;
        if(jTFdataType.getText().endsWith("1")){
        INS=Set_static_data;}
        else if(jTFdataType.getText().endsWith("2")){
    INS=Set_less_frequent_data ;}
        else{ INS=Set_frequent_data;}
        
        
        
        byte[] cmnds_c = {Wallet_CLA, INS, instParamtr1, instParamtr2};
        host.setTheAPDUCommands(cmnds_c);
        host.setTheDataLength( (byte) data_c.length);
        try{
     
        host.setTheDataIn(data_c);
        host.setExpctdByteLength(maxDataBytesExpected);
        setTheCommandAPDUOnGUI(cmnds_c, data_c,(byte) data_c.length, maxDataBytesExpected);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(frame, "PLEASE ENTER A VALID INPUT.");
        }        
        host.exchangeTheAPDUWithSimulator();
        host.decodeStatus(); 
        setTheResponseAPDUOnGUI(maxDataBytesExpected);
        
    }//GEN-LAST:event_jBtnStoreActionPerformed

    private void jBtnPinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPinActionPerformed
        // TODO add your handling code here:
         byte lengthDataField = 4;
        byte maxDataBytesExpected = 0;
        byte instParamtr1 = 0;
        byte instParamtr2 = 0;  
      
        char[] ip = jTFPin.getText().toCharArray();
        byte[] data_v = new byte[ip.length];
       

        byte[] cmnds_v = {Wallet_CLA, VERIFY, instParamtr1, instParamtr2};
        host.setTheAPDUCommands(cmnds_v);
        host.setTheDataLength(lengthDataField);
        
        for(int ipIndx = 0; ipIndx<ip.length;ipIndx++){
            data_v[ipIndx] = (byte)(ip[ipIndx]&0x0F);
        }
        host.setTheDataIn(data_v);
        host.setExpctdByteLength(maxDataBytesExpected);
        setTheCommandAPDUOnGUI(cmnds_v, data_v,lengthDataField, maxDataBytesExpected);
        host.exchangeTheAPDUWithSimulator();
        host.decodeStatus();  
        setTheResponseAPDUOnGUI(maxDataBytesExpected);
        
    }//GEN-LAST:event_jBtnPinActionPerformed

    private void jBtnGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGetActionPerformed
        // TODO add your handling code here:
                 System.err.println("Balance");
        //balance
        byte lengthDataField = 6;
        byte maxDataBytesExpected = 6;
        byte instParamtr1 = 0;
        byte instParamtr2 = 0;
          byte[] data_b = {(byte)0x7F};
          
               byte INS;
        if(jTFdataType.getText().endsWith("1")){
        INS=Get_static_data;}
        else if(jTFdataType.getText().endsWith("2")){
    INS=Get_less_frequent_data ;}
        else{ INS=Get_frequent_data;}
        
        byte[] cmnds_b = {Wallet_CLA, INS, instParamtr1, instParamtr2};
        host.setTheAPDUCommands(cmnds_b);
        host.setTheDataLength((byte)data_b.length);
        
      
        host.setTheDataIn(data_b);
        host.setExpctdByteLength((byte)32);
        setTheCommandAPDUOnGUI(cmnds_b, data_b,lengthDataField, maxDataBytesExpected);              
        host.exchangeTheAPDUWithSimulator();
        host.decodeStatus();
        host.decodeDataOut();
        setTheResponseAPDUOnGUI(maxDataBytesExpected);
    }//GEN-LAST:event_jBtnGetActionPerformed

    private void jBtnPukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnPukActionPerformed
 public void setTheCommandAPDUOnGUI(byte [] cmnds, byte [] data, byte lc, byte le){
        String dataString="";
        dataString+=" 0x"+String.valueOf(host.atrToHex(cmnds[0]));
        dataString+=" 0x"+String.valueOf(host.atrToHex(cmnds[1]));
        dataString+=" 0x"+String.valueOf(host.atrToHex(cmnds[2]));
        dataString+=" 0x"+String.valueOf(host.atrToHex(cmnds[3]));
        dataString+=" 0x"+String.valueOf(lc);
JTFoutput.setText(dataString);
        
        String temp = "";
        for(int i = 0; i<data.length;i++){
            temp += "0x"+host.atrToHex(data[i]);
            temp += " ";
           
        }
        
        temp+=" le:"+"0x"+String.valueOf(le);
        
        jTAdata.setText(temp);
       
        
        
    }
 
 
      public void setTheResponseAPDUOnGUI(byte le){
        
        byte[] stat = host.decodeStatus();
        String dataString="";
        dataString+="0x"+String.valueOf(host.atrToHex(stat[0]));
        dataString+=" 0x"+String.valueOf(host.atrToHex(stat[1]));
        JTFoutput.setText(dataString);
      
        
      
        String caseCmnd = host.atrToHex(stat[0])+host.atrToHex(stat[1]);
        if(caseCmnd.matches("6311")){
            JOptionPane.showMessageDialog(frame, "PIN VERIFICATION REQUIRED.");
        }else if(caseCmnd.matches("6A83")){
            JOptionPane.showMessageDialog(frame, "INVALID TRANSACTION AMOUNT.");
        }else if(caseCmnd.matches("6A84")){
            JOptionPane.showMessageDialog(frame, "EXCEED MAXIMUM BALANCE .");
        }else if(caseCmnd.matches("6A85")){
            JOptionPane.showMessageDialog(frame, "NEGATIVE BALANCE.");
        }else if(caseCmnd.matches("6312") && counter > 0){
            JOptionPane.showMessageDialog(frame, "Wrong PIN "+String.valueOf(--counter)+" attempts left");
        }else if(counter<=0){
            JOptionPane.showMessageDialog(frame, "Card has been blocked!!!!");
        }
        byte[] dataOut = host.decodeDataOut();
            jTAdata.setText(new String(dataOut));
//        if(le!=0 && dataOut.length != 0){
//        //set the balance on textview
//        jTextField4.setText(new String(dataOut));
//        //set the dataout on textview
//        jTextField11.setText("0x"+String.valueOf(host.atrToHex(dataOut[0])) + " " + "0x"+String.valueOf(host.atrToHex(dataOut[1])));
//        }
    }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JavaCardTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JavaCardTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JavaCardTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JavaCardTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaCardTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTFoutput;
    private javax.swing.JButton jBtnConnect;
    private javax.swing.JButton jBtnDisconnect;
    private javax.swing.JButton jBtnGet;
    private javax.swing.JButton jBtnPin;
    private javax.swing.JButton jBtnPuk;
    private javax.swing.JButton jBtnSign;
    private javax.swing.JButton jBtnStore;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTAdata;
    private javax.swing.JTextField jTFPin;
    private javax.swing.JTextField jTFPuk;
    private javax.swing.JTextField jTFdataType;
    // End of variables declaration//GEN-END:variables
}
